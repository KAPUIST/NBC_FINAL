name: seclsecl nestJS StartCI

on:
  workflow_dispatch:
  push:
    branches: [dev, main]
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [dev, main]

jobs:
  ci-test:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment variables
        run: |
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" > .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_SYNC=${{ secrets.DB_SYNC }}" >> .env
          echo "MAIN_REFRESH_TOKEN_EXPIRES=${{secrets.MAIN_REFRESH_TOKEN_EXPIRES}}" >> .env
          echo "MAIN_REFRESH_TOKEN_SECRET=${{secrets.MAIN_REFRESH_TOKEN_SECRET}}" >> .env
          echo "MAIN_ACCESS_TOKEN_EXPIRES=${{secrets.MAIN_ACCESS_TOKEN_EXPIRES}}" >> .env
          echo "MAIN_ACCESS_TOKEN_SECRET=${{secrets.MAIN_ACCESS_TOKEN_SECRET}}" >> .env
          echo "CP_REFRESH_TOKEN_EXPIRES=${{secrets.CP_REFRESH_TOKEN_EXPIRES}}" >> .env
          echo "CP_REFRESH_TOKEN_SECRET=${{secrets.CP_REFRESH_TOKEN_SECRET}}" >> .env
          echo "CP_ACCESS_TOKEN_EXPIRES=${{secrets.CP_ACCESS_TOKEN_EXPIRES}}" >> .env
          echo "CP_ACCESS_TOKEN_SECRET=${{secrets.CP_ACCESS_TOKEN_SECRET}}" >> .env
          echo "ADMIN_REFRESH_TOKEN_EXPIRES=${{secrets.ADMIN_REFRESH_TOKEN_EXPIRES}}" >> .env
          echo "ADMIN_REFRESH_TOKEN_SECRET=${{secrets.ADMIN_REFRESH_TOKEN_SECRET}}" >> .env
          echo "ADMIN_ACCESS_TOKEN_EXPIRES=${{secrets.ADMIN_ACCESS_TOKEN_EXPIRES}}" >> .env
          echo "ADMIN_ACCESS_TOKEN_SECRET=${{secrets.ADMIN_ACCESS_TOKEN_SECRET}}" >> .env
          echo "REDIS_HOST=${{secrets.REDIS_HOST}}" >> .env
          echo "REDIS_PORT=${{secrets.REDIS_PORT}}" >> .env
          echo "REDIS_USER=${{secrets.REDIS_USER}}" >> .env
          echo "REDIS_PASSWORD=${{secrets.REDIS_PASSWORD}}" >> .env
          echo "REDIS_TLS=${{secrets.REDIS_TLS}}" >> .env
          echo "JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}" >> .env
          echo "AWS_REGION=${{secrets.AWS_REGION}}" >> .env
          echo "AWS_S3_BUCKET=${{secrets.AWS_S3_BUCKET}}" >> .env
          echo "SENDBIRD_API_TOKEN=${{secrets.SENDBIRD_API_TOKEN}}" >> .env
          echo "SENDBIRD_APP_ID=${{secrets.SENDBIRD_APP_ID}}" >> .env
          echo "BASE_URL=${{secrets.BASE_URL}}" >> .env
          echo "SENTRY_AUTH_TOKEN=${{secrets.SENTRY_AUTH_TOKEN}}" >> .env
          echt "SENTRY_DSN=${{secrets.SENTRY_DSN}}" >> .env

      - name: Run build
        run: npm run build

      - name: Start server
        run: |
          npm start &
          sleep 20

      - name: Check server status
        run: curl -f http://localhost:${{secrets.SERVER_PORT}}/api/health
